{"version":3,"sources":["caesar13.js","main.js"],"names":["alphabetCapitals","alphabetSmallLetters","caesar13","stringSource","Object","prototype","toString","call","length","resultAsArray","sourceAsArray","i","letterSource","isLetterFound","j","letterInReferenceArray","indexPlus13","push","join","verify","input","goal","console","log"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const alphabetCapitals = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\nconst alphabetSmallLetters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\r\n\r\nfunction caesar13(stringSource){\r\n\r\n  if(Object.prototype.toString.call(stringSource) !== \"[object String]\") throw 'Error: passed argument is not a String';\r\n  if(stringSource.length === 0) throw 'Error: passed argument is an empty String'\r\n\r\n  // debugger;\r\n  const resultAsArray = [];\r\n  const sourceAsArray = [...stringSource];\r\n  for(let i = 0; i < sourceAsArray.length; i++){\r\n\r\n    let letterSource = sourceAsArray[i];\r\n    let isLetterFound = false;\r\n\r\n    //check big letters\r\n    for (let j = 0; j < alphabetCapitals.length; j++){\r\n\r\n      const letterInReferenceArray = alphabetCapitals[j];\r\n      if (letterSource === letterInReferenceArray){\r\n        let indexPlus13 = j + 13;\r\n        if (indexPlus13 === alphabetCapitals.length) indexPlus13 = 0;\r\n        if (indexPlus13 > alphabetCapitals.length) indexPlus13 = indexPlus13 - alphabetCapitals.length;\r\n        resultAsArray.push(alphabetCapitals[indexPlus13]);\r\n        isLetterFound = true;\r\n        continue;\r\n      }\r\n    }\r\n\r\n    //check small letters\r\n    for (let j = 0; j < alphabetSmallLetters.length; j++){\r\n  \r\n      const letterInReferenceArray = alphabetSmallLetters[j];\r\n      if (letterSource === letterInReferenceArray){\r\n        let indexPlus13 = j + 13;\r\n        if (indexPlus13 === alphabetSmallLetters.length) indexPlus13 = 0;\r\n        if (indexPlus13 > alphabetSmallLetters.length) indexPlus13 = indexPlus13 - alphabetSmallLetters.length;\r\n        resultAsArray.push(alphabetSmallLetters[indexPlus13]);\r\n        isLetterFound = true;\r\n        continue;\r\n      }\r\n    }\r\n\r\n  if(!isLetterFound) resultAsArray.push(letterSource);\r\n  }\r\n \r\nreturn resultAsArray.join(\"\");\r\n}\r\n\r\n\r\nexport default caesar13;","import caesar13 from './caesar13';\r\n\r\n/* Weryfikacja */\r\n\r\nfunction verify(input, goal) {\r\n  if (input == goal) {\r\n    console.log('Gratulacje!');\r\n  } else {\r\n    console.log(`Niestety, oczekiwano - ${goal}, otrzymano - ${input}`);\r\n  }\r\n}\r\n\r\nverify(caesar13(\"PRZEPROGRAMOWANI\"), \"CEMRCEBTENZBJNAV\");\r\nverify(caesar13(\"1PRZEPROGRAMOWANI1\"), \"1CEMRCEBTENZBJNAV1\");\r\nverify(caesar13(\"!!PRZEPROGRAMOWAN I\"), \"!!CEMRCEBTENZBJNA V\");"]}