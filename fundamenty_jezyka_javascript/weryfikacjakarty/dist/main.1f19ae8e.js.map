{"version":3,"sources":["checkCardNumberModule.js","main.js"],"names":["checkCardNumber","cardNumberString","resultString","cardNumberOnly","replaceAll","checkIfCardCanBeMastercard","checkIfMastercardIsValid","checkIfCardCanBeVisa","checkIfVisaIsValid","checkIfCardCanBeAmericanExpress","checkIfAmericanExpressIsValid","length","substring","cardNumber","isValid","validateCard","cardAsArrayOfNumbers","i","push","Number","parseInt","sumEveryOddNumberByPart1VerificationPattern","oddNumbersMultipliedBy2Array","indexesOfUsedNumbersArray","sumOfNumbers","sumOfRemainingNumbers","includes","sum","number","resultNumber","numberAsString","toString","currentNumber","verify","input","goal","console","log"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["\r\nexport function checkCardNumber(cardNumberString){\r\n\r\n  let resultString = '';\r\n\r\n  // debugger;\r\n  const cardNumberOnly = cardNumberString.replaceAll(/\\W/g, '');\r\n  if (checkIfCardCanBeMastercard(cardNumberOnly)) resultString = checkIfMastercardIsValid(cardNumberOnly);\r\n  else if (checkIfCardCanBeVisa(cardNumberOnly)) resultString = checkIfVisaIsValid(cardNumberOnly);\r\n  else if (checkIfCardCanBeAmericanExpress(cardNumberOnly)) resultString = checkIfAmericanExpressIsValid(cardNumberOnly);\r\n  else resultString =  'Nieprawidłowy';\r\n  return resultString;\r\n}\r\n\r\n\r\n//utils\r\nfunction checkIfCardCanBeMastercard(cardNumberOnly){\r\n\r\n  if (\r\n    (cardNumberOnly.length === 16 && cardNumberOnly.substring(0, 2) === '51')\r\n    || (cardNumberOnly.length === 16 && cardNumberOnly.substring(0, 2) === '52')\r\n    || (cardNumberOnly.length === 16 && cardNumberOnly.substring(0, 2) === '53')\r\n    || (cardNumberOnly.length === 16 && cardNumberOnly.substring(0, 2) === '54')\r\n    || (cardNumberOnly.length === 16 && cardNumberOnly.substring(0, 2) === '55')\r\n  ) return true;\r\n\r\n  return false;\r\n}\r\n\r\nfunction checkIfCardCanBeVisa(cardNumberOnly){\r\n\r\n  if (\r\n    (cardNumberOnly.length === 15 && cardNumberOnly.substring(0, 2) === '34')\r\n    || (cardNumberOnly.length === 15 && cardNumberOnly.substring(0, 2) === '37')\r\n  ) return true;\r\n\r\n  return false;\r\n}\r\n\r\nfunction checkIfCardCanBeAmericanExpress(cardNumberOnly){\r\n\r\n  if (\r\n    (cardNumberOnly.length === 15 && cardNumberOnly.substring(0, 2) === '34')\r\n    || (cardNumberOnly.length === 15 && cardNumberOnly.substring(0, 2) === '37')\r\n  ) return true;\r\n\r\n  return false;\r\n\r\n}\r\n\r\n\r\nfunction checkIfMastercardIsValid(cardNumber){\r\n\r\n  let isValid = validateCard(cardNumber);\r\n  if (isValid) return 'Mastercard';\r\n  return 'Nieprawidłowy';\r\n}\r\n\r\nfunction checkIfVisaIsValid(cardNumber){\r\n\r\n  let isValid = validateCard(cardNumber);\r\n  if (isValid) return 'Visa';\r\n  return 'Nieprawidłowy';\r\n}\r\n\r\nfunction checkIfAmericanExpressIsValid(cardNumber){\r\n\r\n  let isValid = validateCard(cardNumber);\r\n  if (isValid) return 'American Express';\r\n  return 'Nieprawidłowy';\r\n}\r\n\r\n\r\nfunction validateCard(cardNumber){\r\n\r\n  let isValid = true;\r\n\r\n\r\n  //card numbers as numbers Array\r\n  const cardAsArrayOfNumbers = [];\r\n  for(let i = 0; i < cardNumber.length; i++){\r\n    cardAsArrayOfNumbers.push(Number.parseInt(cardNumber[i]));\r\n  }\r\n\r\n\r\n  //part1: \r\n  //Zaczynając od przedostatniej liczby, pomnóż przez dwa każdą cyfrę o nieparzystym indeksie. Rozbij \r\n  //otrzymane liczby na sumę ich cyfr (np. 18 -> 1 + 8), następnie zsumuj wszystkie te cyfry ze sobą. \r\n  let sumEveryOddNumberByPart1VerificationPattern = 0;\r\n  let oddNumbersMultipliedBy2Array = [];\r\n  let indexesOfUsedNumbersArray = [];\r\n  for (let i = cardAsArrayOfNumbers.length - 2; i >= 0; i--){\r\n    if((i + 1) % 2 !== 0) {\r\n      oddNumbersMultipliedBy2Array.push(cardAsArrayOfNumbers[i] * 2);\r\n      indexesOfUsedNumbersArray.push(i);\r\n    }\r\n  }\r\n  for(let i = 0; i < oddNumbersMultipliedBy2Array.length; i++){\r\n    sumEveryOddNumberByPart1VerificationPattern += sumOfNumbers(oddNumbersMultipliedBy2Array[i]);\r\n  }\r\n\r\n  //part2:\r\n  //Suma cyfr, których nie pomnożyłeś przez dwa.\r\n  let sumOfRemainingNumbers = 0;\r\n  for(let i = 0; i < cardAsArrayOfNumbers.length; i++) {\r\n    if(!indexesOfUsedNumbersArray.includes(i)) sumOfRemainingNumbers += cardAsArrayOfNumbers[i];\r\n  }\r\n\r\n  //part3: final validation check\r\n  //Dodaj otrzymaną sumę do sumy cyfr, których nie pomnożyłeś przez dwa. \r\n  //Jeżeli modulo 10 otrzymanej liczby jest równe 0, numer karty jest prawidłowy\r\n  let sum = sumEveryOddNumberByPart1VerificationPattern + sumOfRemainingNumbers;\r\n  if (sum % 10 !== 0) isValid = false;\r\n\r\nreturn isValid;\r\n}\r\n\r\nfunction sumOfNumbers(number){\r\n\r\n  let resultNumber = 0;\r\n\r\n  const numberAsString = number.toString();\r\n  for (let i = 0; i < numberAsString.length; i++){\r\n    const currentNumber = Number.parseInt(numberAsString[i]);\r\n    resultNumber += currentNumber;\r\n  }\r\n\r\n  return resultNumber;\r\n}","\r\nimport {checkCardNumber} from './checkCardNumberModule.js';\r\n\r\n/* Weryfikacja */\r\n\r\nfunction verify(input, goal) {\r\n  if (input == goal) {\r\n    console.log('Gratulacje!');\r\n  } else {\r\n    console.log(`Niestety, oczekiwano - ${goal}, otrzymano - ${input}`);\r\n  }\r\n}\r\n\r\nverify(checkCardNumber('5193 0801 5095 4111'), 'Mastercard');\r\n// verify(checkCardNumber('378-282 24-6310--005'), 'American Express');\r\n// verify(checkCardNumber('5555555 55555-44-44'), 'Mastercard');\r\n// verify(checkCardNumber('5105-1-0 5105105100'), 'Mastercard');\r\n// verify(checkCardNumber('4012888888881881'), 'Visa');\r\n// verify(checkCardNumber('411-11-1111-11-11111'), 'Visa');\r\n// verify(checkCardNumber('4111111111451111'), 'Nieprawidłowy');\r\n// verify(checkCardNumber('411111145111'), 'Nieprawidłowy');\r\n"]}