{"version":3,"sources":["components/Pokemons/PokemonsList.module.css","components/Layout/Header.module.css","components/Pokemons/PokemonItem.module.css","store/app-context.js","components/Layout/Header.js","components/UI/Button.js","components/UI/Card.js","components/Pokemons/PokemonItem.js","components/Pokemons/PokemonsList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AppContext","React","createContext","isShowPokedex","toggleIsShowPokedex","Header","props","ctx","useContext","useState","inputValue","setInputValue","isInputTouched","setIsInputTouched","enteredInputIsValid","trim","enteredInputIsInvalid","buttonIsHighlighted","setButtonIsHighlighted","inputClasses","classes","invalid","pokemonsInPokedexAmount","pokedexContent","length","btnClasses","bump","useEffect","timer","setTimeout","clearTimeout","className","onClick","form","onSubmit","event","preventDefault","onFetchRequest","onChange","target","value","type","Button","isActive","children","disabled","Card","customWidthHeight","margin","textAlign","width","widthProp","height","heightProp","style","PokemonItem","content","onDeletePokemon","pokemon","id","isPokemonInPokedex","onAddPokemon","src","img","alt","name","abilities","map","ability","PokemonsList","pokemonsList","setPokemonsList","info","isPokemonAdded","includes","error","isLoading","container","App","foundPokemon","setFoundPokemon","pokedex","setPokedex","isPokemonLoading","setPokemonIsLoading","pokemonError","setPokemonError","setIsPokemonAdded","setIsShowPokedex","query","a","fetch","response","ok","Error","json","key","data","transformData","sprites","front_default","message","toggleShowPokedexHandler","previousState","JSON","parse","localStorage","getItem","setItem","stringify","Provider","onToggleShowPokedex","updatedPokedex","slice","push","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89bf738d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PokemonsList_container__2w4ZT\",\"pokemons-list\":\"PokemonsList_pokemons-list__9Poif\",\"info\":\"PokemonsList_info__2cq2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__GaPGb\",\"showpokedex-div\":\"Header_showpokedex-div__2UABJ\",\"form\":\"Header_form__1re0h\",\"invalid\":\"Header_invalid__SOxpe\",\"invalid-p\":\"Header_invalid-p__k6M4O\",\"showpokedex-button\":\"Header_showpokedex-button__1oqz2\",\"bump\":\"Header_bump__dqbxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PokemonItem_container__3nOtk\",\"pokemon-item\":\"PokemonItem_pokemon-item__3K2Q3\",\"pokemon-img\":\"PokemonItem_pokemon-img__1pQFq\",\"name\":\"PokemonItem_name__32A8f\",\"name-div\":\"PokemonItem_name-div__1gePE\",\"abilities\":\"PokemonItem_abilities__2V5aP\",\"button-div\":\"PokemonItem_button-div__wnBNt\"};","import React from \"react\";\r\n\r\nconst AppContext = React.createContext({\r\n  isShowPokedex: false,\r\n  toggleIsShowPokedex: () => {},\r\n});\r\n\r\nexport default AppContext;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport AppContext from \"../../store/app-context\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  //\r\n  //vars\r\n  const ctx = useContext(AppContext);\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [isInputTouched, setIsInputTouched] = useState(false);\r\n\r\n  const enteredInputIsValid = inputValue.trim() !== \"\";\r\n  const enteredInputIsInvalid = !enteredInputIsValid && isInputTouched;\r\n\r\n  const [buttonIsHighlighted, setButtonIsHighlighted] = useState(false);\r\n\r\n  const inputClasses = enteredInputIsInvalid ? `${classes.invalid}` : ``;\r\n  const pokemonsInPokedexAmount = props.pokedexContent.length;\r\n  const btnClasses = `${classes[\"showpokedex-button\"]} ${\r\n    buttonIsHighlighted ? classes.bump : \"\"\r\n  }`;\r\n\r\n  //\r\n  //func\r\n  const inputValueChangeHandler = (event) => {\r\n    setInputValue(event.target.value);\r\n    setIsInputTouched(false);\r\n  };\r\n\r\n  // const inputBlurHandler = (event) => {\r\n  //   setIsInputTouched(true);\r\n  // };\r\n\r\n  const formSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsInputTouched(true);\r\n\r\n    if (!enteredInputIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onFetchRequest(inputValue);\r\n\r\n    setInputValue(\"\");\r\n    setIsInputTouched(false);\r\n  };\r\n\r\n  //\r\n  //effects\r\n  useEffect(() => {\r\n    setButtonIsHighlighted(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setButtonIsHighlighted(false);\r\n    }, 300);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [props.pokedexContent]);\r\n\r\n  //\r\n  //jsx\r\n  return (\r\n    <header>\r\n      <div className={classes[\"showpokedex-div\"]}>\r\n        <button onClick={ctx.toggleIsShowPokedex} className={btnClasses}>\r\n          {ctx.isShowPokedex\r\n            ? `Schowaj Pokedex  (${pokemonsInPokedexAmount})`\r\n            : `Pokaz Pokedex  (${pokemonsInPokedexAmount})`}\r\n        </button>\r\n      </div>\r\n      <h4>Jakiego pokemona szukasz:</h4>\r\n      <form className={classes.form} onSubmit={formSubmissionHandler}>\r\n        <input\r\n          onChange={inputValueChangeHandler}\r\n          // onBlur={inputBlurHandler}\r\n          value={inputValue}\r\n          className={inputClasses}\r\n        />\r\n        <button type=\"submit\">></button>\r\n        {enteredInputIsInvalid && (\r\n          <p className={classes[\"invalid-p\"]}>Pole nie może być puste.</p>\r\n        )}\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  if (props.isActive) {\r\n    return <button onClick={props.onClick}>{props.children}</button>;\r\n  } else {\r\n    return <button disabled>{props.children}</button>;\r\n  }\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const customWidthHeight = {\r\n    margin: \"1rem 0\",\r\n    textAlign: \"center\",\r\n    width: props.widthProp,\r\n    height: props.heightProp,\r\n  };\r\n\r\n  return <div style={customWidthHeight}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport Card from \"../UI/Card\";\r\nimport AppContext from \"../../store/app-context\";\r\n\r\nimport classes from \"./PokemonItem.module.css\";\r\n\r\nconst PokemonItem = (props) => {\r\n  //\r\n  //vars\r\n  const ctx = useContext(AppContext);\r\n\r\n  //\r\n  //func\r\n  function addToPokedexHandler() {\r\n    props.onAddPokemon(props.pokemon);\r\n  }\r\n\r\n  function deleteFromPokedexHandler() {\r\n    props.onDeletePokemon(props.pokemon.id);\r\n  }\r\n\r\n  //\r\n  //content--start\r\n  let content = \"\";\r\n  if (ctx.isShowPokedex) {\r\n    content = (\r\n      <Button onClick={deleteFromPokedexHandler} isActive={true}>\r\n        Skasuj\r\n      </Button>\r\n    );\r\n  }\r\n  if (!ctx.isShowPokedex && props.isPokemonInPokedex) {\r\n    content = <Button isActive={false}>Already in Pokedex</Button>;\r\n  }\r\n  if (!ctx.isShowPokedex && !props.isPokemonInPokedex) {\r\n    content = (\r\n      <Button isActive={true} onClick={addToPokedexHandler}>\r\n        Add to Pokedex\r\n      </Button>\r\n    );\r\n  }\r\n  //\r\n  //content-end\r\n\r\n  //\r\n  //jsx\r\n  return (\r\n    <Card widthProp=\"220px\" heightProp=\"250px\">\r\n      <div className={classes[\"pokemon-item\"]}>\r\n        <div>\r\n          <img\r\n            className={classes[\"pokemon-img\"]}\r\n            src={props.pokemon.img}\r\n            alt={props.pokemon.name}\r\n          />\r\n        </div>\r\n        <div className={classes[\"name-div\"]}>\r\n          <span className={classes.name}>{props.pokemon.name}</span>\r\n        </div>\r\n        <div>\r\n          {props.pokemon.abilities.map((ability) => (\r\n            <span className={classes.abilities} key={ability}>\r\n              {ability}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className={classes[\"button-div\"]}>{content}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\nexport default PokemonItem;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport AppContext from \"../../store/app-context\";\r\nimport PokemonItem from \"./PokemonItem\";\r\n\r\nimport classes from \"./PokemonsList.module.css\";\r\n\r\nconst PokemonsList = (props) => {\r\n  //\r\n  // vars\r\n  const ctx = useContext(AppContext);\r\n  const [pokemonsList, setPokemonsList] = useState([]);\r\n\r\n  //\r\n  //func\r\n  function isPokemonAlreadyStored(id) {\r\n    const storedIdsArray = props.pokedexContent.map((pokemon) => pokemon.id);\r\n    return storedIdsArray.includes(id);\r\n  }\r\n\r\n  //effect\r\n  useEffect(() => {\r\n    setPokemonsList(props.pokemon);\r\n  }, [props.pokemon]);\r\n\r\n  //\r\n  //content--start\r\n  let content = (\r\n    <div className={classes[\"pokemons-list\"]}>\r\n      <p className={classes.info}>\r\n        Brak wyników do pokazania, napisz jakiego Pokemona poszukujesz.\r\n      </p>\r\n    </div>\r\n  );\r\n  if (props.isPokemonAdded) {\r\n    content = (\r\n      <div className={classes[\"pokemons-list\"]}>\r\n        <p className={classes.info}>Dodano Pokemona do Pokedex'u.</p>\r\n      </div>\r\n    );\r\n  }\r\n  if (ctx.isShowPokedex) {\r\n    content = (\r\n      <div className={classes[\"pokemons-list\"]}>\r\n        <p className={classes.info}>\r\n          Nie masz żadnego Pokemona w swoim Pokedex'ie.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  if (pokemonsList.length > 0) {\r\n    content = (\r\n      <div className={classes[\"pokemons-list\"]}>\r\n        {pokemonsList.map((pokemon) => {\r\n          const isPokemonInPokedex = isPokemonAlreadyStored(pokemon.id);\r\n\r\n          return (\r\n            <PokemonItem\r\n              key={pokemon.id}\r\n              pokemon={pokemon}\r\n              onAddPokemon={props.onAddPokemon}\r\n              onDeletePokemon={props.onDeletePokemon}\r\n              isPokemonInPokedex={isPokemonInPokedex}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  if (props.error && !ctx.isShowPokedex) {\r\n    content = (\r\n      <div className={classes[\"pokemons-list\"]}>\r\n        <p className={classes.info}>{props.error}</p>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.isLoading) {\r\n    content = (\r\n      <div className={classes[\"pokemons-list\"]}>\r\n        <p className={classes.info}>Wczytuję...</p>\r\n      </div>\r\n    );\r\n  }\r\n  //content-end\r\n\r\n  //\r\n  //jsx\r\n  return <div className={classes.container}>{content}</div>;\r\n};\r\n\r\nexport default PokemonsList;\r\n","import { useEffect, useState, useContext } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Layout/Header\";\nimport PokemonsList from \"./components/Pokemons/PokemonsList\";\nimport AppContext from \"./store/app-context\";\n\nfunction App() {\n  //\n  //vars\n  const [foundPokemon, setFoundPokemon] = useState([]);\n  const [pokedex, setPokedex] = useState([]);\n\n  const [isPokemonLoading, setPokemonIsLoading] = useState(false);\n  const [pokemonError, setPokemonError] = useState(null);\n  const [isPokemonAdded, setIsPokemonAdded] = useState(false);\n\n  const [isShowPokedex, setIsShowPokedex] = useState(false);\n\n  const ctx = useContext(AppContext);\n\n  //\n  //effects\n  useState(() => {\n    setPokedex(JSON.parse(localStorage.getItem(\"pokedexArray\") || \"[]\"));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"pokedexArray\", JSON.stringify(pokedex));\n  }, [pokedex]);\n\n  useEffect(() => {\n    if (isShowPokedex) setFoundPokemon(pokedex);\n    else setFoundPokemon([]);\n  }, [isShowPokedex, pokedex]);\n\n  //\n  //func\n  function addPokemonToPokedexHandler(pokemon) {\n    const updatedPokedex = pokedex.slice();\n    updatedPokedex.push(pokemon);\n    setPokedex(updatedPokedex);\n    setIsPokemonAdded(true);\n  }\n\n  function deletePokemonFromPokedexHandler(id) {\n    const updatedPokedex = pokedex.filter((pokemon) => pokemon.id !== id);\n    setPokedex(updatedPokedex);\n  }\n\n  async function pokemonsFetchRequestHandler(query) {\n    setPokemonIsLoading(true);\n    setPokemonError(null);\n    setIsShowPokedex(false);\n    setIsPokemonAdded(false);\n\n    try {\n      const response = await fetch(\n        `https://pokeapi.co/api/v2/pokemon/${query}`\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Coś poszło nie tak. Może nie ma takiego Pokemona?...\");\n      }\n\n      const data = await response.json();\n\n      const transformData = {};\n      for (const key in data) {\n        if (key === \"id\") transformData.id = data.id;\n        if (key === \"name\") transformData.name = data.name;\n        if (key === \"sprites\") transformData.img = data.sprites.front_default;\n        if (key === \"abilities\")\n          transformData.abilities = data.abilities.map((ability) => {\n            return ability.ability.name;\n          });\n      }\n\n      setFoundPokemon([transformData]);\n    } catch (error) {\n      setPokemonError(error.message);\n    }\n    setPokemonIsLoading(false);\n  }\n\n  function toggleShowPokedexHandler() {\n    setIsShowPokedex((previousState) => !previousState);\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        isShowPokedex: isShowPokedex,\n        toggleIsShowPokedex: toggleShowPokedexHandler,\n      }}\n    >\n      <Header\n        onFetchRequest={pokemonsFetchRequestHandler}\n        onToggleShowPokedex={toggleShowPokedexHandler}\n        pokedexContent={pokedex}\n      />\n      <PokemonsList\n        pokemon={foundPokemon}\n        isLoading={isPokemonLoading}\n        error={pokemonError}\n        isPokemonAdded={isPokemonAdded}\n        onAddPokemon={addPokemonToPokedexHandler}\n        onDeletePokemon={deletePokemonFromPokedexHandler}\n        pokedexContent={pokedex}\n      />\n    </AppContext.Provider>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}